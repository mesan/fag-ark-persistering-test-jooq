/**
 * This class is generated by jOOQ
 */
package no.mesan.ark.persistering.generated;


import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Timestamp;

import javax.annotation.Generated;

import no.mesan.ark.persistering.generated.routines.GetCustomerBalance;
import no.mesan.ark.persistering.generated.routines.GroupConcat;
import no.mesan.ark.persistering.generated.routines.InventoryHeldByCustomer;
import no.mesan.ark.persistering.generated.routines.InventoryInStock;
import no.mesan.ark.persistering.generated.routines.LastDay;
import no.mesan.ark.persistering.generated.routines.LastUpdated;
import no.mesan.ark.persistering.generated.routines.PagilaPaymentInsertTrigger;
import no.mesan.ark.persistering.generated.routines._GroupConcat;
import no.mesan.ark.persistering.generated.tables.FilmInStock;
import no.mesan.ark.persistering.generated.tables.FilmNotInStock;
import no.mesan.ark.persistering.generated.tables.RewardsReport;

import org.jooq.AggregateFunction;
import org.jooq.Configuration;
import org.jooq.Field;


/**
 * Convenience access to all stored procedures and functions in public
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

	/**
	 * Call <code>public.get_customer_balance</code>
	 */
	public static BigDecimal getCustomerBalance(Configuration configuration, Integer pCustomerId, Timestamp pEffectiveDate) {
		GetCustomerBalance f = new GetCustomerBalance();
		f.setPCustomerId(pCustomerId);
		f.setPEffectiveDate(pEffectiveDate);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>public.get_customer_balance</code> as a field.
	 */
	public static Field<BigDecimal> getCustomerBalance(Integer pCustomerId, Timestamp pEffectiveDate) {
		GetCustomerBalance f = new GetCustomerBalance();
		f.setPCustomerId(pCustomerId);
		f.setPEffectiveDate(pEffectiveDate);

		return f.asField();
	}

	/**
	 * Get <code>public.get_customer_balance</code> as a field.
	 */
	public static Field<BigDecimal> getCustomerBalance(Field<Integer> pCustomerId, Field<Timestamp> pEffectiveDate) {
		GetCustomerBalance f = new GetCustomerBalance();
		f.setPCustomerId(pCustomerId);
		f.setPEffectiveDate(pEffectiveDate);

		return f.asField();
	}

	/**
	 * Call <code>public._group_concat</code>
	 */
	public static String _GroupConcat(Configuration configuration, String __1, String __2) {
		_GroupConcat f = new _GroupConcat();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>public._group_concat</code> as a field.
	 */
	public static Field<String> _GroupConcat(String __1, String __2) {
		_GroupConcat f = new _GroupConcat();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get <code>public._group_concat</code> as a field.
	 */
	public static Field<String> _GroupConcat(Field<String> __1, Field<String> __2) {
		_GroupConcat f = new _GroupConcat();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get <code>public.group_concat</code> as a field.
	 */
	public static AggregateFunction<String> groupConcat(String __1) {
		GroupConcat f = new GroupConcat();
		f.set__1(__1);

		return f.asAggregateFunction();
	}

	/**
	 * Get <code>public.group_concat</code> as a field.
	 */
	public static AggregateFunction<String> groupConcat(Field<String> __1) {
		GroupConcat f = new GroupConcat();
		f.set__1(__1);

		return f.asAggregateFunction();
	}

	/**
	 * Call <code>public.inventory_held_by_customer</code>
	 */
	public static Integer inventoryHeldByCustomer(Configuration configuration, Integer pInventoryId) {
		InventoryHeldByCustomer f = new InventoryHeldByCustomer();
		f.setPInventoryId(pInventoryId);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>public.inventory_held_by_customer</code> as a field.
	 */
	public static Field<Integer> inventoryHeldByCustomer(Integer pInventoryId) {
		InventoryHeldByCustomer f = new InventoryHeldByCustomer();
		f.setPInventoryId(pInventoryId);

		return f.asField();
	}

	/**
	 * Get <code>public.inventory_held_by_customer</code> as a field.
	 */
	public static Field<Integer> inventoryHeldByCustomer(Field<Integer> pInventoryId) {
		InventoryHeldByCustomer f = new InventoryHeldByCustomer();
		f.setPInventoryId(pInventoryId);

		return f.asField();
	}

	/**
	 * Call <code>public.inventory_in_stock</code>
	 */
	public static Boolean inventoryInStock(Configuration configuration, Integer pInventoryId) {
		InventoryInStock f = new InventoryInStock();
		f.setPInventoryId(pInventoryId);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>public.inventory_in_stock</code> as a field.
	 */
	public static Field<Boolean> inventoryInStock(Integer pInventoryId) {
		InventoryInStock f = new InventoryInStock();
		f.setPInventoryId(pInventoryId);

		return f.asField();
	}

	/**
	 * Get <code>public.inventory_in_stock</code> as a field.
	 */
	public static Field<Boolean> inventoryInStock(Field<Integer> pInventoryId) {
		InventoryInStock f = new InventoryInStock();
		f.setPInventoryId(pInventoryId);

		return f.asField();
	}

	/**
	 * Call <code>public.last_day</code>
	 */
	public static Date lastDay(Configuration configuration, Timestamp __1) {
		LastDay f = new LastDay();
		f.set__1(__1);

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>public.last_day</code> as a field.
	 */
	public static Field<Date> lastDay(Timestamp __1) {
		LastDay f = new LastDay();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Get <code>public.last_day</code> as a field.
	 */
	public static Field<Date> lastDay(Field<Timestamp> __1) {
		LastDay f = new LastDay();
		f.set__1(__1);

		return f.asField();
	}

	/**
	 * Call <code>public.last_updated</code>
	 */
	public static Object lastUpdated(Configuration configuration) {
		LastUpdated f = new LastUpdated();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>public.last_updated</code> as a field.
	 */
	public static Field<Object> lastUpdated() {
		LastUpdated f = new LastUpdated();

		return f.asField();
	}

	/**
	 * Call <code>public.pagila_payment_insert_trigger</code>
	 */
	public static Object pagilaPaymentInsertTrigger(Configuration configuration) {
		PagilaPaymentInsertTrigger f = new PagilaPaymentInsertTrigger();

		f.execute(configuration);
		return f.getReturnValue();
	}

	/**
	 * Get <code>public.pagila_payment_insert_trigger</code> as a field.
	 */
	public static Field<Object> pagilaPaymentInsertTrigger() {
		PagilaPaymentInsertTrigger f = new PagilaPaymentInsertTrigger();

		return f.asField();
	}

	/**
	 * Get <code>public.film_in_stock</code> as a table.
	 */
	public static FilmInStock filmInStock(Integer pFilmId, Integer pStoreId) {
		return FilmInStock.FILM_IN_STOCK.call(pFilmId, pStoreId);
	}

	/**
	 * Get <code>public.film_in_stock</code> as a table.
	 */
	public static FilmInStock filmInStock(Field<Integer> pFilmId, Field<Integer> pStoreId) {
		return FilmInStock.FILM_IN_STOCK.call(pFilmId, pStoreId);
	}

	/**
	 * Get <code>public.film_not_in_stock</code> as a table.
	 */
	public static FilmNotInStock filmNotInStock(Integer pFilmId, Integer pStoreId) {
		return FilmNotInStock.FILM_NOT_IN_STOCK.call(pFilmId, pStoreId);
	}

	/**
	 * Get <code>public.film_not_in_stock</code> as a table.
	 */
	public static FilmNotInStock filmNotInStock(Field<Integer> pFilmId, Field<Integer> pStoreId) {
		return FilmNotInStock.FILM_NOT_IN_STOCK.call(pFilmId, pStoreId);
	}

	/**
	 * Get <code>public.rewards_report</code> as a table.
	 */
	public static RewardsReport rewardsReport(Integer minMonthlyPurchases, BigDecimal minDollarAmountPurchased) {
		return RewardsReport.REWARDS_REPORT.call(minMonthlyPurchases, minDollarAmountPurchased);
	}

	/**
	 * Get <code>public.rewards_report</code> as a table.
	 */
	public static RewardsReport rewardsReport(Field<Integer> minMonthlyPurchases, Field<BigDecimal> minDollarAmountPurchased) {
		return RewardsReport.REWARDS_REPORT.call(minMonthlyPurchases, minDollarAmountPurchased);
	}
}
