/**
 * This class is generated by jOOQ
 */
package no.mesan.ark.persistering.generated.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import no.mesan.ark.persistering.generated.enums.MpaaRating;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "film", schema = "public")
public class Film implements Serializable {

	private static final long serialVersionUID = 1154485654;

	private Integer    filmId;
	private String     title;
	private String     description;
	private Integer    releaseYear;
	private Integer    languageId;
	private Integer    originalLanguageId;
	private Integer    rentalDuration;
	private BigDecimal rentalRate;
	private Integer    length;
	private BigDecimal replacementCost;
	private MpaaRating rating;
	private Timestamp  lastUpdate;
	private String[]   specialFeatures;
	private Object     fulltext;

	public Film() {}

	public Film(Film value) {
		this.filmId = value.filmId;
		this.title = value.title;
		this.description = value.description;
		this.releaseYear = value.releaseYear;
		this.languageId = value.languageId;
		this.originalLanguageId = value.originalLanguageId;
		this.rentalDuration = value.rentalDuration;
		this.rentalRate = value.rentalRate;
		this.length = value.length;
		this.replacementCost = value.replacementCost;
		this.rating = value.rating;
		this.lastUpdate = value.lastUpdate;
		this.specialFeatures = value.specialFeatures;
		this.fulltext = value.fulltext;
	}

	public Film(
		Integer    filmId,
		String     title,
		String     description,
		Integer    releaseYear,
		Integer    languageId,
		Integer    originalLanguageId,
		Integer    rentalDuration,
		BigDecimal rentalRate,
		Integer    length,
		BigDecimal replacementCost,
		MpaaRating rating,
		Timestamp  lastUpdate,
		String[]   specialFeatures,
		Object     fulltext
	) {
		this.filmId = filmId;
		this.title = title;
		this.description = description;
		this.releaseYear = releaseYear;
		this.languageId = languageId;
		this.originalLanguageId = originalLanguageId;
		this.rentalDuration = rentalDuration;
		this.rentalRate = rentalRate;
		this.length = length;
		this.replacementCost = replacementCost;
		this.rating = rating;
		this.lastUpdate = lastUpdate;
		this.specialFeatures = specialFeatures;
		this.fulltext = fulltext;
	}

	@Id
	@Column(name = "film_id", unique = true, nullable = false, precision = 32)
	public Integer getFilmId() {
		return this.filmId;
	}

	public void setFilmId(Integer filmId) {
		this.filmId = filmId;
	}

	@Column(name = "title", nullable = false, length = 255)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "release_year", precision = 32)
	public Integer getReleaseYear() {
		return this.releaseYear;
	}

	public void setReleaseYear(Integer releaseYear) {
		this.releaseYear = releaseYear;
	}

	@Column(name = "language_id", nullable = false, precision = 32)
	public Integer getLanguageId() {
		return this.languageId;
	}

	public void setLanguageId(Integer languageId) {
		this.languageId = languageId;
	}

	@Column(name = "original_language_id", precision = 32)
	public Integer getOriginalLanguageId() {
		return this.originalLanguageId;
	}

	public void setOriginalLanguageId(Integer originalLanguageId) {
		this.originalLanguageId = originalLanguageId;
	}

	@Column(name = "rental_duration", nullable = false, precision = 32)
	public Integer getRentalDuration() {
		return this.rentalDuration;
	}

	public void setRentalDuration(Integer rentalDuration) {
		this.rentalDuration = rentalDuration;
	}

	@Column(name = "rental_rate", nullable = false, precision = 4, scale = 2)
	public BigDecimal getRentalRate() {
		return this.rentalRate;
	}

	public void setRentalRate(BigDecimal rentalRate) {
		this.rentalRate = rentalRate;
	}

	@Column(name = "length", precision = 32)
	public Integer getLength() {
		return this.length;
	}

	public void setLength(Integer length) {
		this.length = length;
	}

	@Column(name = "replacement_cost", nullable = false, precision = 5, scale = 2)
	public BigDecimal getReplacementCost() {
		return this.replacementCost;
	}

	public void setReplacementCost(BigDecimal replacementCost) {
		this.replacementCost = replacementCost;
	}

	@Column(name = "rating")
	public MpaaRating getRating() {
		return this.rating;
	}

	public void setRating(MpaaRating rating) {
		this.rating = rating;
	}

	@Column(name = "last_update", nullable = false)
	public Timestamp getLastUpdate() {
		return this.lastUpdate;
	}

	public void setLastUpdate(Timestamp lastUpdate) {
		this.lastUpdate = lastUpdate;
	}

	@Column(name = "special_features")
	public String[] getSpecialFeatures() {
		return this.specialFeatures;
	}

	public void setSpecialFeatures(String[] specialFeatures) {
		this.specialFeatures = specialFeatures;
	}

	@Column(name = "fulltext", nullable = false)
	public Object getFulltext() {
		return this.fulltext;
	}

	public void setFulltext(Object fulltext) {
		this.fulltext = fulltext;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("Film (");

		sb.append(filmId);
		sb.append(", ").append(title);
		sb.append(", ").append(description);
		sb.append(", ").append(releaseYear);
		sb.append(", ").append(languageId);
		sb.append(", ").append(originalLanguageId);
		sb.append(", ").append(rentalDuration);
		sb.append(", ").append(rentalRate);
		sb.append(", ").append(length);
		sb.append(", ").append(replacementCost);
		sb.append(", ").append(rating);
		sb.append(", ").append(lastUpdate);
		sb.append(", ").append(Arrays.toString(specialFeatures));
		sb.append(", ").append(fulltext);

		sb.append(")");
		return sb.toString();
	}
}
