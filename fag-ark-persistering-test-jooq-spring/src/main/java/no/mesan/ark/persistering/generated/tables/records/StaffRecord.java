/**
 * This class is generated by jOOQ
 */
package no.mesan.ark.persistering.generated.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import no.mesan.ark.persistering.generated.tables.Staff;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "staff", schema = "public")
public class StaffRecord extends UpdatableRecordImpl<StaffRecord> implements Record11<Integer, String, String, Integer, String, Integer, Boolean, String, String, Timestamp, byte[]> {

	private static final long serialVersionUID = -1315799129;

	/**
	 * Setter for <code>public.staff.staff_id</code>.
	 */
	public void setStaffId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.staff.staff_id</code>.
	 */
	@Id
	@Column(name = "staff_id", unique = true, nullable = false, precision = 32)
	public Integer getStaffId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.staff.first_name</code>.
	 */
	public void setFirstName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.staff.first_name</code>.
	 */
	@Column(name = "first_name", nullable = false, length = 45)
	public String getFirstName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>public.staff.last_name</code>.
	 */
	public void setLastName(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.staff.last_name</code>.
	 */
	@Column(name = "last_name", nullable = false, length = 45)
	public String getLastName() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>public.staff.address_id</code>.
	 */
	public void setAddressId(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.staff.address_id</code>.
	 */
	@Column(name = "address_id", nullable = false, precision = 32)
	public Integer getAddressId() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>public.staff.email</code>.
	 */
	public void setEmail(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>public.staff.email</code>.
	 */
	@Column(name = "email", length = 50)
	public String getEmail() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>public.staff.store_id</code>.
	 */
	public void setStoreId(Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>public.staff.store_id</code>.
	 */
	@Column(name = "store_id", nullable = false, precision = 32)
	public Integer getStoreId() {
		return (Integer) getValue(5);
	}

	/**
	 * Setter for <code>public.staff.active</code>.
	 */
	public void setActive(Boolean value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>public.staff.active</code>.
	 */
	@Column(name = "active", nullable = false)
	public Boolean getActive() {
		return (Boolean) getValue(6);
	}

	/**
	 * Setter for <code>public.staff.username</code>.
	 */
	public void setUsername(String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>public.staff.username</code>.
	 */
	@Column(name = "username", nullable = false, length = 16)
	public String getUsername() {
		return (String) getValue(7);
	}

	/**
	 * Setter for <code>public.staff.password</code>.
	 */
	public void setPassword(String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>public.staff.password</code>.
	 */
	@Column(name = "password", length = 40)
	public String getPassword() {
		return (String) getValue(8);
	}

	/**
	 * Setter for <code>public.staff.last_update</code>.
	 */
	public void setLastUpdate(Timestamp value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>public.staff.last_update</code>.
	 */
	@Column(name = "last_update", nullable = false)
	public Timestamp getLastUpdate() {
		return (Timestamp) getValue(9);
	}

	/**
	 * Setter for <code>public.staff.picture</code>.
	 */
	public void setPicture(byte[] value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>public.staff.picture</code>.
	 */
	@Column(name = "picture")
	public byte[] getPicture() {
		return (byte[]) getValue(10);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record11 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row11<Integer, String, String, Integer, String, Integer, Boolean, String, String, Timestamp, byte[]> fieldsRow() {
		return (Row11) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row11<Integer, String, String, Integer, String, Integer, Boolean, String, String, Timestamp, byte[]> valuesRow() {
		return (Row11) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Staff.STAFF.STAFF_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Staff.STAFF.FIRST_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Staff.STAFF.LAST_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return Staff.STAFF.ADDRESS_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Staff.STAFF.EMAIL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return Staff.STAFF.STORE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field7() {
		return Staff.STAFF.ACTIVE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field8() {
		return Staff.STAFF.USERNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field9() {
		return Staff.STAFF.PASSWORD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field10() {
		return Staff.STAFF.LAST_UPDATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<byte[]> field11() {
		return Staff.STAFF.PICTURE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getStaffId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getFirstName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getLastName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getAddressId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getEmail();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getStoreId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value7() {
		return getActive();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value8() {
		return getUsername();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value9() {
		return getPassword();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value10() {
		return getLastUpdate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value11() {
		return getPicture();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value1(Integer value) {
		setStaffId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value2(String value) {
		setFirstName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value3(String value) {
		setLastName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value4(Integer value) {
		setAddressId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value5(String value) {
		setEmail(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value6(Integer value) {
		setStoreId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value7(Boolean value) {
		setActive(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value8(String value) {
		setUsername(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value9(String value) {
		setPassword(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value10(Timestamp value) {
		setLastUpdate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord value11(byte[] value) {
		setPicture(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public StaffRecord values(Integer value1, String value2, String value3, Integer value4, String value5, Integer value6, Boolean value7, String value8, String value9, Timestamp value10, byte[] value11) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached StaffRecord
	 */
	public StaffRecord() {
		super(Staff.STAFF);
	}

	/**
	 * Create a detached, initialised StaffRecord
	 */
	public StaffRecord(Integer staffId, String firstName, String lastName, Integer addressId, String email, Integer storeId, Boolean active, String username, String password, Timestamp lastUpdate, byte[] picture) {
		super(Staff.STAFF);

		setValue(0, staffId);
		setValue(1, firstName);
		setValue(2, lastName);
		setValue(3, addressId);
		setValue(4, email);
		setValue(5, storeId);
		setValue(6, active);
		setValue(7, username);
		setValue(8, password);
		setValue(9, lastUpdate);
		setValue(10, picture);
	}
}
